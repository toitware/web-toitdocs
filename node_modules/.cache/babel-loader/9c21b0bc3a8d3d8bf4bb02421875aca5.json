{"ast":null,"code":"// Copyright (C) 2020 Toitware ApS. All rights reserved.\nimport data from \"../libraries.json\"; //Returns a list of found results\n\nfunction printResult(result, indexJSON) {\n  let output = [];\n\n  try {\n    if (JSON.stringify(result) !== \"[]\") {\n      result.matches.map(elem => {\n        if (elem.key === \"text\") {\n          //For Aliases\n          output.push({\n            Name: elem.value,\n            Type: \"alias\",\n            Path: elem.path\n          });\n        } else {\n          //For libraries, modules, classes\n          output.push({\n            Name: elem.value,\n            Type: elem.key,\n            Path: searchInFuseResults(elem, indexJSON)\n          });\n        }\n      });\n    }\n  } catch (err) {\n    output = [\"Error.\"];\n    console.log(\"ERROR: Nothing found.\");\n  }\n\n  return output;\n} //Returns the path to the element which allows the routing\n\n\nfunction searchInFuseResults(item, indexJSON) {\n  var out = \"\";\n\n  try {\n    let which_key = indexJSON.keys.findIndex(element => element.id === item.key);\n    let index_array = indexJSON.records[0].$[which_key];\n    let found_matches = [];\n    index_array.map(elem => {\n      if (elem.v === item.value) {\n        found_matches.push(elem.i);\n      }\n    });\n    let which_instance = found_matches.findIndex(elem => elem === item.refIndex);\n    let path = searchInLib(which_key, item.value, data);\n    out = path[which_instance];\n  } catch (err) {\n    console.log(\"ERROR: Path is wrong\");\n  }\n\n  return out;\n} //Returns a path to found library, class, module that's used for routing\n\n\nfunction searchInLib(which_key, name_to_find, data) {\n  let results = [];\n\n  switch (which_key) {\n    case 0:\n      //libraries.lib_name\n      for (let lib_i = 0; lib_i < data.libraries.length; lib_i++) {\n        if (name_to_find === data.libraries[lib_i].lib_name) {\n          results.push(data.libraries[lib_i].lib_name);\n        }\n      }\n\n      break;\n\n    case 1:\n      //libraries.lib_modules.module\n      for (let lib_i = 0; lib_i < data.libraries.length; lib_i++) {\n        for (let lib_module_i = 0; lib_module_i < data.libraries[lib_i].lib_modules.length; lib_module_i++) {\n          if (name_to_find === data.libraries[lib_i].lib_modules[lib_module_i].module) {\n            results.push(data.libraries[lib_i].lib_name + \"/\" + data.libraries[lib_i].lib_modules[lib_module_i].module);\n          }\n        }\n      }\n\n      break;\n\n    case 2:\n      //libraries.lib_modules.module_classes.class_name\n      for (let lib_i = 0; lib_i < data.libraries.length; lib_i++) {\n        try {\n          for (let lib_module_i = 0; lib_module_i < data.libraries[lib_i].lib_modules.length; lib_module_i++) {\n            if (\"module_classes\" in data.libraries[lib_i].lib_modules[lib_module_i]) {\n              for (let module_class_i = 0; module_class_i < data.libraries[lib_i].lib_modules[lib_module_i].module_classes.length; module_class_i++) {\n                if (name_to_find === data.libraries[lib_i].lib_modules[lib_module_i].module_classes[module_class_i].class_name) {\n                  results.push(data.libraries[lib_i].lib_name + \"/\" + data.libraries[lib_i].lib_modules[lib_module_i].module + \"/\" + data.libraries[lib_i].lib_modules[lib_module_i].module_classes[module_class_i].class_name);\n                }\n              }\n            } else {//nothing\n            }\n          }\n        } catch (err) {\n          console.log(\"Lack of module classes\");\n        }\n      }\n\n      break;\n\n    default:\n      results.push(\"Wrong key\");\n  }\n\n  return results;\n}\n\nexport { printResult };","map":{"version":3,"sources":["/Users/krzysztofmroz/toit_folder/web-toitdocs/src/components/search_component.js"],"names":["data","printResult","result","indexJSON","output","JSON","stringify","matches","map","elem","key","push","Name","value","Type","Path","path","searchInFuseResults","err","console","log","item","out","which_key","keys","findIndex","element","id","index_array","records","$","found_matches","v","i","which_instance","refIndex","searchInLib","name_to_find","results","lib_i","libraries","length","lib_name","lib_module_i","lib_modules","module","module_class_i","module_classes","class_name"],"mappings":"AAAA;AAEA,OAAOA,IAAP,MAAiB,mBAAjB,C,CAEA;;AACA,SAASC,WAAT,CAAqBC,MAArB,EAA6BC,SAA7B,EAAwC;AACtC,MAAIC,MAAM,GAAG,EAAb;;AACA,MAAI;AACF,QAAIC,IAAI,CAACC,SAAL,CAAeJ,MAAf,MAA2B,IAA/B,EAAqC;AACnCA,MAAAA,MAAM,CAACK,OAAP,CAAeC,GAAf,CAAoBC,IAAD,IAAU;AAC3B,YAAIA,IAAI,CAACC,GAAL,KAAa,MAAjB,EAAyB;AACvB;AACAN,UAAAA,MAAM,CAACO,IAAP,CAAY;AACVC,YAAAA,IAAI,EAAEH,IAAI,CAACI,KADD;AAEVC,YAAAA,IAAI,EAAE,OAFI;AAGVC,YAAAA,IAAI,EAAEN,IAAI,CAACO;AAHD,WAAZ;AAKD,SAPD,MAOO;AACL;AACAZ,UAAAA,MAAM,CAACO,IAAP,CAAY;AACVC,YAAAA,IAAI,EAAEH,IAAI,CAACI,KADD;AAEVC,YAAAA,IAAI,EAAEL,IAAI,CAACC,GAFD;AAGVK,YAAAA,IAAI,EAAEE,mBAAmB,CAACR,IAAD,EAAON,SAAP;AAHf,WAAZ;AAKD;AACF,OAhBD;AAiBD;AAEF,GArBD,CAqBE,OAAOe,GAAP,EAAY;AACZd,IAAAA,MAAM,GAAG,CAAC,QAAD,CAAT;AACAe,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACD;;AACD,SAAOhB,MAAP;AACD,C,CAED;;;AACA,SAASa,mBAAT,CAA6BI,IAA7B,EAAmClB,SAAnC,EAA8C;AAC5C,MAAImB,GAAG,GAAG,EAAV;;AACA,MAAI;AACF,QAAIC,SAAS,GAAGpB,SAAS,CAACqB,IAAV,CAAeC,SAAf,CAA0BC,OAAD,IAAaA,OAAO,CAACC,EAAR,KAAeN,IAAI,CAACX,GAA1D,CAAhB;AACA,QAAIkB,WAAW,GAAGzB,SAAS,CAAC0B,OAAV,CAAkB,CAAlB,EAAqBC,CAArB,CAAuBP,SAAvB,CAAlB;AACA,QAAIQ,aAAa,GAAG,EAApB;AACAH,IAAAA,WAAW,CAACpB,GAAZ,CAAiBC,IAAD,IAAU;AACxB,UAAIA,IAAI,CAACuB,CAAL,KAAWX,IAAI,CAACR,KAApB,EAA2B;AACzBkB,QAAAA,aAAa,CAACpB,IAAd,CAAmBF,IAAI,CAACwB,CAAxB;AACD;AACF,KAJD;AAKA,QAAIC,cAAc,GAAGH,aAAa,CAACN,SAAd,CAClBhB,IAAD,IAAUA,IAAI,KAAKY,IAAI,CAACc,QADL,CAArB;AAIA,QAAInB,IAAI,GAAGoB,WAAW,CAACb,SAAD,EAAYF,IAAI,CAACR,KAAjB,EAAwBb,IAAxB,CAAtB;AACAsB,IAAAA,GAAG,GAAGN,IAAI,CAACkB,cAAD,CAAV;AACD,GAfD,CAeE,OAAOhB,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACD;;AACD,SAAOE,GAAP;AACD,C,CAED;;;AACA,SAASc,WAAT,CAAqBb,SAArB,EAAgCc,YAAhC,EAA8CrC,IAA9C,EAAoD;AAClD,MAAIsC,OAAO,GAAG,EAAd;;AACA,UAAQf,SAAR;AACE,SAAK,CAAL;AAAQ;AACN,WAAK,IAAIgB,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGvC,IAAI,CAACwC,SAAL,CAAeC,MAA3C,EAAmDF,KAAK,EAAxD,EAA4D;AAC1D,YAAIF,YAAY,KAAKrC,IAAI,CAACwC,SAAL,CAAeD,KAAf,EAAsBG,QAA3C,EAAqD;AACnDJ,UAAAA,OAAO,CAAC3B,IAAR,CAAaX,IAAI,CAACwC,SAAL,CAAeD,KAAf,EAAsBG,QAAnC;AACD;AACF;;AACD;;AACF,SAAK,CAAL;AAAQ;AACN,WAAK,IAAIH,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGvC,IAAI,CAACwC,SAAL,CAAeC,MAA3C,EAAmDF,KAAK,EAAxD,EAA4D;AAC1D,aACE,IAAII,YAAY,GAAG,CADrB,EAEEA,YAAY,GAAG3C,IAAI,CAACwC,SAAL,CAAeD,KAAf,EAAsBK,WAAtB,CAAkCH,MAFnD,EAGEE,YAAY,EAHd,EAIE;AACA,cACEN,YAAY,KACZrC,IAAI,CAACwC,SAAL,CAAeD,KAAf,EAAsBK,WAAtB,CAAkCD,YAAlC,EAAgDE,MAFlD,EAGE;AACAP,YAAAA,OAAO,CAAC3B,IAAR,CACEX,IAAI,CAACwC,SAAL,CAAeD,KAAf,EAAsBG,QAAtB,GACE,GADF,GAEE1C,IAAI,CAACwC,SAAL,CAAeD,KAAf,EAAsBK,WAAtB,CAAkCD,YAAlC,EAAgDE,MAHpD;AAKD;AACF;AACF;;AACD;;AACF,SAAK,CAAL;AAAQ;AACN,WAAK,IAAIN,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGvC,IAAI,CAACwC,SAAL,CAAeC,MAA3C,EAAmDF,KAAK,EAAxD,EAA4D;AAC1D,YAAI;AACF,eACE,IAAII,YAAY,GAAG,CADrB,EAEEA,YAAY,GAAG3C,IAAI,CAACwC,SAAL,CAAeD,KAAf,EAAsBK,WAAtB,CAAkCH,MAFnD,EAGEE,YAAY,EAHd,EAIE;AACA,gBACE,oBACA3C,IAAI,CAACwC,SAAL,CAAeD,KAAf,EAAsBK,WAAtB,CAAkCD,YAAlC,CAFF,EAGE;AACA,mBACE,IAAIG,cAAc,GAAG,CADvB,EAEEA,cAAc,GACd9C,IAAI,CAACwC,SAAL,CAAeD,KAAf,EAAsBK,WAAtB,CAAkCD,YAAlC,EAAgDI,cAAhD,CACGN,MAJL,EAKEK,cAAc,EALhB,EAME;AACA,oBACET,YAAY,KACZrC,IAAI,CAACwC,SAAL,CAAeD,KAAf,EAAsBK,WAAtB,CAAkCD,YAAlC,EACGI,cADH,CACkBD,cADlB,EACkCE,UAHpC,EAIE;AACAV,kBAAAA,OAAO,CAAC3B,IAAR,CACEX,IAAI,CAACwC,SAAL,CAAeD,KAAf,EAAsBG,QAAtB,GACE,GADF,GAEE1C,IAAI,CAACwC,SAAL,CAAeD,KAAf,EAAsBK,WAAtB,CAAkCD,YAAlC,EAAgDE,MAFlD,GAGE,GAHF,GAIE7C,IAAI,CAACwC,SAAL,CAAeD,KAAf,EAAsBK,WAAtB,CAAkCD,YAAlC,EACGI,cADH,CACkBD,cADlB,EACkCE,UANtC;AAQD;AACF;AACF,aA1BD,MA0BO,CACL;AACD;AACF;AACF,SApCD,CAoCE,OAAO9B,GAAP,EAAY;AACZC,UAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACD;AACF;;AACD;;AACF;AACEkB,MAAAA,OAAO,CAAC3B,IAAR,CAAa,WAAb;AAxEJ;;AA0EA,SAAO2B,OAAP;AACD;;AAED,SAASrC,WAAT","sourcesContent":["// Copyright (C) 2020 Toitware ApS. All rights reserved.\n\nimport data from \"../libraries.json\";\n\n//Returns a list of found results\nfunction printResult(result, indexJSON) {\n  let output = [];\n  try {\n    if (JSON.stringify(result) !== \"[]\") {\n      result.matches.map((elem) => {\n        if (elem.key === \"text\") {\n          //For Aliases\n          output.push({\n            Name: elem.value,\n            Type: \"alias\",\n            Path: elem.path,\n          });\n        } else {\n          //For libraries, modules, classes\n          output.push({\n            Name: elem.value,\n            Type: elem.key,\n            Path: searchInFuseResults(elem, indexJSON),\n          });\n        }\n      });\n    } \n    \n  } catch (err) {\n    output = [\"Error.\"];\n    console.log(\"ERROR: Nothing found.\");\n  }\n  return output;\n}\n\n//Returns the path to the element which allows the routing\nfunction searchInFuseResults(item, indexJSON) {\n  var out = \"\";\n  try {\n    let which_key = indexJSON.keys.findIndex((element) => element.id === item.key);\n    let index_array = indexJSON.records[0].$[which_key];\n    let found_matches = [];\n    index_array.map((elem) => {\n      if (elem.v === item.value) {\n        found_matches.push(elem.i);\n      }\n    });\n    let which_instance = found_matches.findIndex(\n      (elem) => elem === item.refIndex\n    );\n\n    let path = searchInLib(which_key, item.value, data);\n    out = path[which_instance];\n  } catch (err) {\n    console.log(\"ERROR: Path is wrong\");\n  }\n  return out;\n}\n\n//Returns a path to found library, class, module that's used for routing\nfunction searchInLib(which_key, name_to_find, data) {\n  let results = [];\n  switch (which_key) {\n    case 0: //libraries.lib_name\n      for (let lib_i = 0; lib_i < data.libraries.length; lib_i++) {\n        if (name_to_find === data.libraries[lib_i].lib_name) {\n          results.push(data.libraries[lib_i].lib_name);\n        }\n      }\n      break;\n    case 1: //libraries.lib_modules.module\n      for (let lib_i = 0; lib_i < data.libraries.length; lib_i++) {\n        for (\n          let lib_module_i = 0;\n          lib_module_i < data.libraries[lib_i].lib_modules.length;\n          lib_module_i++\n        ) {\n          if (\n            name_to_find ===\n            data.libraries[lib_i].lib_modules[lib_module_i].module\n          ) {\n            results.push(\n              data.libraries[lib_i].lib_name +\n                \"/\" +\n                data.libraries[lib_i].lib_modules[lib_module_i].module\n            );\n          }\n        }\n      }\n      break;\n    case 2: //libraries.lib_modules.module_classes.class_name\n      for (let lib_i = 0; lib_i < data.libraries.length; lib_i++) {\n        try {\n          for (\n            let lib_module_i = 0;\n            lib_module_i < data.libraries[lib_i].lib_modules.length;\n            lib_module_i++\n          ) {\n            if (\n              \"module_classes\" in\n              data.libraries[lib_i].lib_modules[lib_module_i]\n            ) {\n              for (\n                let module_class_i = 0;\n                module_class_i <\n                data.libraries[lib_i].lib_modules[lib_module_i].module_classes\n                  .length;\n                module_class_i++\n              ) {\n                if (\n                  name_to_find ===\n                  data.libraries[lib_i].lib_modules[lib_module_i]\n                    .module_classes[module_class_i].class_name\n                ) {\n                  results.push(\n                    data.libraries[lib_i].lib_name +\n                      \"/\" +\n                      data.libraries[lib_i].lib_modules[lib_module_i].module +\n                      \"/\" +\n                      data.libraries[lib_i].lib_modules[lib_module_i]\n                        .module_classes[module_class_i].class_name\n                  );\n                }\n              }\n            } else {\n              //nothing\n            }\n          }\n        } catch (err) {\n          console.log(\"Lack of module classes\");\n        }\n      }\n      break;\n    default:\n      results.push(\"Wrong key\");\n  }\n  return results;\n}\n\nexport { printResult };\n"]},"metadata":{},"sourceType":"module"}