{"ast":null,"code":"var _jsxFileName = \"/Users/krzysztofmroz/toit_folder/web-toitdocs/src/components/library_info.js\";\n// Copyright (C) 2020 Toitware ApS. All rights reserved.\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport data from \"../libraries.json\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { List } from \"@material-ui/core\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    maxWidth: 300,\n    backgroundColor: theme.palette.background.paper\n  },\n  paper: {\n    paddingLeft: theme.spacing(4)\n  }\n}));\n\nfunction LibraryModules(match) {\n  var output;\n\n  try {\n    output = data.libraries.find(element => element.lib_name === match.value.params.libName).lib_modules.map((element, i) => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: \"lib_module_name\" + i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 16\n        }\n      }, \" \", element.module, \" \");\n    });\n  } catch (err) {\n    output = \"Error\";\n  }\n\n  return output;\n} // Description of the library\n\n\nconst LibraryInfo = ({\n  match\n}) => {\n  const {\n    params: {\n      libName\n    }\n  } = match;\n  const library = data.libraries.find(({\n    lib_name\n  }) => lib_name === libName);\n  const classes = useStyles();\n\n  if (\"lib_modules\" in library && library.lib_modules !== undefined) {\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 9,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      pt: 2,\n      pb: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      component: \"h1\",\n      variant: \"h1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, \"Library: \", library.lib_name)), /*#__PURE__*/React.createElement(Box, {\n      pt: 2,\n      pb: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      pt: 1,\n      pb: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      component: \"h2\",\n      variant: \"h2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 15\n      }\n    }, \"Modules\")), /*#__PURE__*/React.createElement(Paper, {\n      variant: \"outlined\",\n      className: classes.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(List, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(LibraryModules, {\n      value: match,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }))))));\n  } else {\n    return /*#__PURE__*/React.createElement(Grid, {\n      containerclassName: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 9,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      pt: 2,\n      pb: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      component: \"h1\",\n      variant: \"h1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, \"ERROR:\", /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 15\n      }\n    }, \"Library: \", libName, \" not found\")))));\n  }\n};\n\nexport default LibraryInfo;","map":{"version":3,"sources":["/Users/krzysztofmroz/toit_folder/web-toitdocs/src/components/library_info.js"],"names":["React","makeStyles","data","Grid","Typography","Box","Paper","List","useStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","paddingLeft","spacing","LibraryModules","match","output","libraries","find","element","lib_name","value","params","libName","lib_modules","map","i","module","err","LibraryInfo","library","classes","undefined"],"mappings":"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","sourcesContent":["// Copyright (C) 2020 Toitware ApS. All rights reserved.\n\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport data from \"../libraries.json\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { List } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    maxWidth: 300,\n    backgroundColor: theme.palette.background.paper,\n  },\n  paper: {\n    paddingLeft: theme.spacing(4),\n  },\n}));\n\nfunction LibraryModules(match) {\n  var output;\n  try {\n    output = data.libraries\n      .find((element) => element.lib_name === match.value.params.libName)\n      .lib_modules.map((element, i) => {\n        return <li key={\"lib_module_name\"+i} > {element.module} </li>;\n      });\n  } catch (err) {\n    output = \"Error\";\n  }\n  return output;\n}\n\n// Description of the library\nconst LibraryInfo = ({ match }) => {\n  const {\n    params: { libName },\n  } = match;\n  const library = data.libraries.find(({ lib_name }) => lib_name === libName);\n  const classes = useStyles();\n\n  if (\"lib_modules\" in library && library.lib_modules !== undefined) {\n    return (\n      <Grid container>\n        <Grid item xs={9}>\n          <Box pt={2} pb={2}>\n            <Typography component=\"h1\" variant=\"h1\">\n              Library: {library.lib_name}\n            </Typography>\n          </Box>\n          <Box pt={2} pb={2}>\n            <Box pt={1} pb={1}>\n              <Typography component=\"h2\" variant=\"h2\">\n                Modules\n              </Typography>\n            </Box>\n            <Paper variant=\"outlined\" className={classes.paper}>\n              <List>\n                <LibraryModules value={match} />\n              </List>\n            </Paper>\n          </Box>\n        </Grid>\n      </Grid>\n    );\n  } else {\n    return (\n      <Grid containerclassName={classes.root}>\n        <Grid item xs={9}>\n          <Box pt={2} pb={2}>\n            <Typography component=\"h1\" variant=\"h1\">\n              ERROR:\n              <p>Library: {libName} not found</p>\n            </Typography>\n          </Box>\n        </Grid>\n      </Grid>\n    );\n  }\n};\n\nexport default LibraryInfo;\n"]},"metadata":{},"sourceType":"module"}