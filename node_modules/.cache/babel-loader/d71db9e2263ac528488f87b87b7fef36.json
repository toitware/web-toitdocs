{"ast":null,"code":"var _jsxFileName = \"/Users/krzysztofmroz/toit_folder/web-toitdocs/src/components/class_info.js\";\n// Copyright (C) 2020 Toitware ApS. All rights reserved.\nimport React from \"react\";\nimport data from \"../libraries.json\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ClassContentList from \"./class_content_list\";\nimport Toitdocs from \"./toitdoc_info\";\nimport { Methods } from \"./methods\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link } from \"react-router-dom\";\nimport Box from \"@material-ui/core/Box\";\nimport { Hidden } from \"@material-ui/core\";\n\nfunction Extends({\n  extendText,\n  extendURL\n}) {\n  if (extendText !== undefined) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `/${extendURL}/${extendText}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }\n    }, \" extends \", extendText));\n  } else {\n    return null;\n  }\n}\n\nfunction Constructors(props) {\n  if (props.value !== undefined) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h2\",\n      component: \"h2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, \"Constructors:\"), /*#__PURE__*/React.createElement(Methods, {\n      value: props.value,\n      libName: props.libName,\n      moduleName: props.moduleName,\n      className: props.className,\n      functionType: \"Constructors\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }));\n  } else {\n    return null;\n  }\n}\n\nfunction Statics(props) {\n  if (props.value !== undefined) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h2\",\n      component: \"h2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, \"Statics:\"), /*#__PURE__*/React.createElement(Methods, {\n      value: props.value,\n      libName: props.libName,\n      moduleName: props.moduleName,\n      className: props.className,\n      functionType: \"Statics\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }));\n  } else {\n    return null;\n  }\n}\n\nfunction Factories(props) {\n  if (props.value !== undefined) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h2\",\n      component: \"h2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, \"Factories:\"), /*#__PURE__*/React.createElement(Methods, {\n      value: props.value,\n      libName: props.libName,\n      moduleName: props.moduleName,\n      className: props.className,\n      functionType: \"Factories\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }));\n  } else {\n    return null;\n  }\n}\n\nfunction Members(props) {\n  if (props.value !== undefined) {\n    if (props.value.fields !== undefined) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        variant: \"h2\",\n        component: \"h2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }\n      }, \"Members:\"), /*#__PURE__*/React.createElement(Typography, {\n        variant: \"h3\",\n        component: \"h3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }\n      }, \"Fields:\"), props.value.fields.map(index => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: index.field_name,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"functionName\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"strong\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 19\n          }\n        }, index.field_name), \"/\", index.field_type), /*#__PURE__*/React.createElement(Toitdocs, {\n          value: index.field_toitdoc,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 17\n          }\n        }));\n      }), /*#__PURE__*/React.createElement(Typography, {\n        variant: \"h3\",\n        component: \"h3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }\n      }, \"Methods:\"), /*#__PURE__*/React.createElement(Methods, {\n        value: props.value.methods,\n        libName: props.libName,\n        moduleName: props.moduleName,\n        className: props.className,\n        functionType: \"Members\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }\n      }));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        variant: \"h2\",\n        component: \"h2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }\n      }, \"Members:\"), /*#__PURE__*/React.createElement(Typography, {\n        variant: \"h3\",\n        component: \"h3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }\n      }, \"Methods:\"), /*#__PURE__*/React.createElement(Methods, {\n        value: props.value.methods,\n        libName: props.libName,\n        moduleName: props.moduleName,\n        className: props.className,\n        functionType: \"Members\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }\n      }));\n    }\n  } else {\n    return null;\n  }\n}\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\"\n  }\n}); // Returns description of the class\n\nconst ClassInfo = ({\n  match\n}) => {\n  const classes = useStyles();\n  const {\n    params: {\n      libName,\n      moduleName,\n      className\n    }\n  } = match;\n  const class_info = data.libraries.find(({\n    lib_name\n  }) => lib_name === libName).lib_modules.find(({\n    module\n  }) => module === moduleName).module_classes.find(({\n    class_name\n  }) => class_name === className);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    pt: 2,\n    pb: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h1\",\n    component: \"h1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }\n  }, \"Class: \", class_info.class_name), /*#__PURE__*/React.createElement(Extends, {\n    extendText: class_info.extends,\n    extendURL: class_info.extend_path,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Constructors, {\n    value: class_info.class_structure.constructors,\n    libName: libName,\n    moduleName: moduleName,\n    className: className,\n    functionType: \"Constructors\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Factories, {\n    value: class_info.class_structure.factories,\n    libName: libName,\n    moduleName: moduleName,\n    className: className,\n    functionType: \"Factories\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Members, {\n    value: class_info.class_structure.members,\n    libName: libName,\n    moduleName: moduleName,\n    className: className,\n    functionType: \"Members\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Statics, {\n    value: class_info.class_structure.statics,\n    libName: libName,\n    moduleName: moduleName,\n    className: className,\n    functionType: \"Statics\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Hidden, {\n    xsDown: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ClassContentList, {\n    value: class_info,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default ClassInfo;","map":{"version":3,"sources":["/Users/krzysztofmroz/toit_folder/web-toitdocs/src/components/class_info.js"],"names":["React","data","Grid","ClassContentList","Toitdocs","Methods","Typography","makeStyles","Link","Box","Hidden","Extends","extendText","extendURL","undefined","Constructors","props","value","libName","moduleName","className","Statics","Factories","Members","fields","map","index","field_name","field_type","field_toitdoc","methods","useStyles","root","width","ClassInfo","match","classes","params","class_info","libraries","find","lib_name","lib_modules","module","module_classes","class_name","extends","extend_path","class_structure","constructors","factories","members","statics"],"mappings":";AAAA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,gBAAP,MAA6B,sBAA7B;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,SAASC,MAAT,QAAuB,mBAAvB;;AAEA,SAASC,OAAT,CAAiB;AAAEC,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAAjB,EAA4C;AAC1C,MAAID,UAAU,KAAKE,SAAnB,EAA8B;AAC5B,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAG,IAAGD,SAAU,IAAGD,UAAW,EAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAmDA,UAAnD,CADF,CADF;AAKD,GAND,MAMO;AACL,WAAO,IAAP;AACD;AACF;;AAED,SAASG,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,MAAIA,KAAK,CAACC,KAAN,KAAgBH,SAApB,EAA+B;AAC7B,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAyB,MAAA,SAAS,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAIE,oBAAC,OAAD;AACE,MAAA,KAAK,EAAEE,KAAK,CAACC,KADf;AAEE,MAAA,OAAO,EAAED,KAAK,CAACE,OAFjB;AAGE,MAAA,UAAU,EAAEF,KAAK,CAACG,UAHpB;AAIE,MAAA,SAAS,EAAEH,KAAK,CAACI,SAJnB;AAKE,MAAA,YAAY,EAAC,cALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF;AAcD,GAfD,MAeO;AACL,WAAO,IAAP;AACD;AACF;;AAED,SAASC,OAAT,CAAiBL,KAAjB,EAAwB;AACtB,MAAIA,KAAK,CAACC,KAAN,KAAgBH,SAApB,EAA+B;AAC7B,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAyB,MAAA,SAAS,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,oBAAC,OAAD;AACE,MAAA,KAAK,EAAEE,KAAK,CAACC,KADf;AAEE,MAAA,OAAO,EAAED,KAAK,CAACE,OAFjB;AAGE,MAAA,UAAU,EAAEF,KAAK,CAACG,UAHpB;AAIE,MAAA,SAAS,EAAEH,KAAK,CAACI,SAJnB;AAKE,MAAA,YAAY,EAAC,SALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF;AAcD,GAfD,MAeO;AACL,WAAO,IAAP;AACD;AACF;;AAED,SAASE,SAAT,CAAmBN,KAAnB,EAA0B;AACxB,MAAIA,KAAK,CAACC,KAAN,KAAgBH,SAApB,EAA+B;AAC7B,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAyB,MAAA,SAAS,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE,oBAAC,OAAD;AACE,MAAA,KAAK,EAAEE,KAAK,CAACC,KADf;AAEE,MAAA,OAAO,EAAED,KAAK,CAACE,OAFjB;AAGE,MAAA,UAAU,EAAEF,KAAK,CAACG,UAHpB;AAIE,MAAA,SAAS,EAAEH,KAAK,CAACI,SAJnB;AAKE,MAAA,YAAY,EAAC,WALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF;AAcD,GAfD,MAeO;AACL,WAAO,IAAP;AACD;AACF;;AAED,SAASG,OAAT,CAAiBP,KAAjB,EAAwB;AACtB,MAAIA,KAAK,CAACC,KAAN,KAAgBH,SAApB,EAA+B;AAC7B,QAAIE,KAAK,CAACC,KAAN,CAAYO,MAAZ,KAAuBV,SAA3B,EAAsC;AACpC,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAyB,QAAA,SAAS,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAyB,QAAA,SAAS,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJF,EAOGE,KAAK,CAACC,KAAN,CAAYO,MAAZ,CAAmBC,GAAnB,CAAwBC,KAAD,IAAW;AACjC,4BACE;AAAK,UAAA,GAAG,EAAEA,KAAK,CAACC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAEE;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAASD,KAAK,CAACC,UAAf,CADF,OACuCD,KAAK,CAACE,UAD7C,CAFF,eAKE,oBAAC,QAAD;AAAU,UAAA,KAAK,EAAEF,KAAK,CAACG,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UALF,CADF;AASD,OAVA,CAPH,eAkBE,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAyB,QAAA,SAAS,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAlBF,eAqBE,oBAAC,OAAD;AACE,QAAA,KAAK,EAAEb,KAAK,CAACC,KAAN,CAAYa,OADrB;AAEE,QAAA,OAAO,EAAEd,KAAK,CAACE,OAFjB;AAGE,QAAA,UAAU,EAAEF,KAAK,CAACG,UAHpB;AAIE,QAAA,SAAS,EAAEH,KAAK,CAACI,SAJnB;AAKE,QAAA,YAAY,EAAC,SALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QArBF,CADF;AA+BD,KAhCD,MAgCO;AACL,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAyB,QAAA,SAAS,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAyB,QAAA,SAAS,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,eAOE,oBAAC,OAAD;AACE,QAAA,KAAK,EAAEJ,KAAK,CAACC,KAAN,CAAYa,OADrB;AAEE,QAAA,OAAO,EAAEd,KAAK,CAACE,OAFjB;AAGE,QAAA,UAAU,EAAEF,KAAK,CAACG,UAHpB;AAIE,QAAA,SAAS,EAAEH,KAAK,CAACI,SAJnB;AAKE,QAAA,YAAY,EAAC,SALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,CADF;AAiBD;AACF,GApDD,MAoDO;AACL,WAAO,IAAP;AACD;AACF;;AACD,MAAMW,SAAS,GAAGxB,UAAU,CAAC;AAC3ByB,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE;AADH;AADqB,CAAD,CAA5B,C,CAMA;;AACA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAC/B,QAAMC,OAAO,GAAGL,SAAS,EAAzB;AACA,QAAM;AACJM,IAAAA,MAAM,EAAE;AAAEnB,MAAAA,OAAF;AAAWC,MAAAA,UAAX;AAAuBC,MAAAA;AAAvB;AADJ,MAEFe,KAFJ;AAIA,QAAMG,UAAU,GAAGrC,IAAI,CAACsC,SAAL,CAChBC,IADgB,CACX,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAkBA,QAAQ,KAAKvB,OADpB,EAEhBwB,WAFgB,CAEJF,IAFI,CAEC,CAAC;AAAEG,IAAAA;AAAF,GAAD,KAAgBA,MAAM,KAAKxB,UAF5B,EAGhByB,cAHgB,CAGDJ,IAHC,CAGI,CAAC;AAAEK,IAAAA;AAAF,GAAD,KAAoBA,UAAU,KAAKzB,SAHvC,CAAnB;AAIA,sBACE;AAAK,IAAA,SAAS,EAAEgB,OAAO,CAACJ,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAY,IAAA,EAAE,EAAE,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,SAAS,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACUM,UAAU,CAACO,UADrB,CADF,eAIE,oBAAC,OAAD;AACE,IAAA,UAAU,EAAEP,UAAU,CAACQ,OADzB;AAEE,IAAA,SAAS,EAAER,UAAU,CAACS,WAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF,eAUE,oBAAC,YAAD;AACE,IAAA,KAAK,EAAET,UAAU,CAACU,eAAX,CAA2BC,YADpC;AAEE,IAAA,OAAO,EAAE/B,OAFX;AAGE,IAAA,UAAU,EAAEC,UAHd;AAIE,IAAA,SAAS,EAAEC,SAJb;AAKE,IAAA,YAAY,EAAC,cALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,eAiBE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEkB,UAAU,CAACU,eAAX,CAA2BE,SADpC;AAEE,IAAA,OAAO,EAAEhC,OAFX;AAGE,IAAA,UAAU,EAAEC,UAHd;AAIE,IAAA,SAAS,EAAEC,SAJb;AAKE,IAAA,YAAY,EAAC,WALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBF,eAwBE,oBAAC,OAAD;AACE,IAAA,KAAK,EAAEkB,UAAU,CAACU,eAAX,CAA2BG,OADpC;AAEE,IAAA,OAAO,EAAEjC,OAFX;AAGE,IAAA,UAAU,EAAEC,UAHd;AAIE,IAAA,SAAS,EAAEC,SAJb;AAKE,IAAA,YAAY,EAAC,SALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxBF,eA+BE,oBAAC,OAAD;AACE,IAAA,KAAK,EAAEkB,UAAU,CAACU,eAAX,CAA2BI,OADpC;AAEE,IAAA,OAAO,EAAElC,OAFX;AAGE,IAAA,UAAU,EAAEC,UAHd;AAIE,IAAA,SAAS,EAAEC,SAJb;AAKE,IAAA,YAAY,EAAC,SALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA/BF,CADF,eAwCE,oBAAC,MAAD;AAAQ,IAAA,MAAM,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAEkB,UAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAxCF,CADF,CADF;AAkDD,CA5DD;;AA8DA,eAAeJ,SAAf","sourcesContent":["// Copyright (C) 2020 Toitware ApS. All rights reserved.\n\nimport React from \"react\";\nimport data from \"../libraries.json\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ClassContentList from \"./class_content_list\";\nimport Toitdocs from \"./toitdoc_info\";\nimport { Methods } from \"./methods\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link } from \"react-router-dom\";\nimport Box from \"@material-ui/core/Box\";\nimport { Hidden } from \"@material-ui/core\";\n\nfunction Extends({ extendText, extendURL }) {\n  if (extendText !== undefined) {\n    return (\n      <div>\n        <Link to={`/${extendURL}/${extendText}`}> extends {extendText}</Link>\n      </div>\n    );\n  } else {\n    return null;\n  }\n}\n\nfunction Constructors(props) {\n  if (props.value !== undefined) {\n    return (\n      <div>\n        <Typography variant=\"h2\" component=\"h2\">\n          Constructors:\n        </Typography>\n        <Methods\n          value={props.value}\n          libName={props.libName}\n          moduleName={props.moduleName}\n          className={props.className}\n          functionType=\"Constructors\"\n        />\n      </div>\n    );\n  } else {\n    return null;\n  }\n}\n\nfunction Statics(props) {\n  if (props.value !== undefined) {\n    return (\n      <div>\n        <Typography variant=\"h2\" component=\"h2\">\n          Statics:\n        </Typography>\n        <Methods\n          value={props.value}\n          libName={props.libName}\n          moduleName={props.moduleName}\n          className={props.className}\n          functionType=\"Statics\"\n        />\n      </div>\n    );\n  } else {\n    return null;\n  }\n}\n\nfunction Factories(props) {\n  if (props.value !== undefined) {\n    return (\n      <div>\n        <Typography variant=\"h2\" component=\"h2\">\n          Factories:\n        </Typography>\n        <Methods\n          value={props.value}\n          libName={props.libName}\n          moduleName={props.moduleName}\n          className={props.className}\n          functionType=\"Factories\"\n        />\n      </div>\n    );\n  } else {\n    return null;\n  }\n}\n\nfunction Members(props) {\n  if (props.value !== undefined) {\n    if (props.value.fields !== undefined) {\n      return (\n        <div>\n          <Typography variant=\"h2\" component=\"h2\">\n            Members:\n          </Typography>\n          <Typography variant=\"h3\" component=\"h3\">\n            Fields:\n          </Typography>\n          {props.value.fields.map((index) => {\n            return (\n              <div key={index.field_name} >\n                {/* TODO: link to field type */}\n                <div className=\"functionName\">\n                  <strong>{index.field_name}</strong>/{index.field_type}\n                </div>\n                <Toitdocs value={index.field_toitdoc} />\n              </div>\n            );\n          })}\n          <Typography variant=\"h3\" component=\"h3\">\n            Methods:\n          </Typography>\n          <Methods\n            value={props.value.methods}\n            libName={props.libName}\n            moduleName={props.moduleName}\n            className={props.className}\n            functionType=\"Members\"\n          />\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <Typography variant=\"h2\" component=\"h2\">\n            Members:\n          </Typography>\n          <Typography variant=\"h3\" component=\"h3\">\n            Methods:\n          </Typography>\n          <Methods\n            value={props.value.methods}\n            libName={props.libName}\n            moduleName={props.moduleName}\n            className={props.className}\n            functionType=\"Members\"\n          />\n        </div>\n      );\n    }\n  } else {\n    return null;\n  }\n}\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\",\n  },\n});\n\n// Returns description of the class\nconst ClassInfo = ({ match }) => {\n  const classes = useStyles();\n  const {\n    params: { libName, moduleName, className },\n  } = match;\n\n  const class_info = data.libraries\n    .find(({ lib_name }) => lib_name === libName)\n    .lib_modules.find(({ module }) => module === moduleName)\n    .module_classes.find(({ class_name }) => class_name === className);\n  return (\n    <div className={classes.root}>\n      <Grid container>\n        <Grid item xs={12} sm={9}>\n          <Box pt={2} pb={2}>\n            <Typography variant=\"h1\" component=\"h1\">\n              Class: {class_info.class_name}\n            </Typography>\n            <Extends\n              extendText={class_info.extends}\n              extendURL={class_info.extend_path}\n            />\n          </Box>\n          <Constructors\n            value={class_info.class_structure.constructors}\n            libName={libName}\n            moduleName={moduleName}\n            className={className}\n            functionType=\"Constructors\"\n          />\n          <Factories\n            value={class_info.class_structure.factories}\n            libName={libName}\n            moduleName={moduleName}\n            className={className}\n            functionType=\"Factories\"\n          />\n          <Members\n            value={class_info.class_structure.members}\n            libName={libName}\n            moduleName={moduleName}\n            className={className}\n            functionType=\"Members\"\n          />\n          <Statics\n            value={class_info.class_structure.statics}\n            libName={libName}\n            moduleName={moduleName}\n            className={className}\n            functionType=\"Statics\"\n          />\n        </Grid>\n        <Hidden xsDown>\n          <Grid item sm={3}>\n            <ClassContentList value={class_info} />\n          </Grid>\n        </Hidden>\n      </Grid>\n    </div>\n  );\n};\n\nexport default ClassInfo;\n"]},"metadata":{},"sourceType":"module"}