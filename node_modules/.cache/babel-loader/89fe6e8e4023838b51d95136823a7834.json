{"ast":null,"code":"var _jsxFileName = \"/Users/krzysztofmroz/toit_folder/web-toitdocs/src/components/module_info.js\";\n// Copyright (C) 2020 Toitware ApS. All rights reserved.\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link } from \"react-router-dom\";\nimport data from \"../libraries.json\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ModuleContentList from \"./module_content_list\";\nimport Toitdocs from \"./toitdoc_info\";\nimport { MethodsInModules } from \"./methods\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { Hidden } from \"@material-ui/core\";\n\nfunction Globals(props) {\n  if (props.value !== undefined) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      component: \"h3\",\n      variant: \"h3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }\n    }, \"Variables:\"), [].concat(props.value).sort((a, b) => a.global_name.localeCompare(b.global_name)).map((globals, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: `${globals.global_name}_${index}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"code\", {\n        className: \"functionName\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }\n      }, globals.global_name));\n    }));\n  } else {\n    return null;\n  }\n}\n\nfunction GlobalFunctions(props) {\n  if (props.value !== undefined) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      component: \"h3\",\n      variant: \"h3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, \"Functions:\"), /*#__PURE__*/React.createElement(MethodsInModules, {\n      value: props.value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }));\n  } else {\n    return null;\n  }\n}\n\nfunction TopLevel(props) {\n  if (props.value !== undefined) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      component: \"h2\",\n      variant: \"h2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Globals, {\n      value: props.value.module_globals,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(GlobalFunctions, {\n      value: props.value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }));\n  } else {\n    return null;\n  }\n}\n\nfunction TopLevelExport(props) {\n  try {\n    if (props.value.export_globals !== undefined || props.value.export_functions !== undefined) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        component: \"h2\",\n        variant: \"h2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }\n      }, \"Exports\"), /*#__PURE__*/React.createElement(Globals, {\n        value: props.value.export_globals,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(GlobalFunctions, {\n        value: props.value.export_functions,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }\n      }));\n    } else {\n      return null;\n    }\n  } catch {\n    return null;\n  }\n}\n\nfunction importPath(libName, modules) {\n  var path = \"\";\n\n  if (libName === modules.module.substring(0, modules.module.indexOf(\".\"))) {\n    path = modules.module.substring(0, modules.module.indexOf(\".\"));\n  } else {\n    path = libName + \".\" + modules.module.substring(0, modules.module.indexOf(\".\"));\n  }\n\n  return path;\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(1),\n    width: \"60%\",\n    backgroundColor: \"#9d9d9c11\",\n    color: \"black\"\n  }\n}));\n\nconst ModuleInfo = ({\n  match\n}) => {\n  const {\n    params: {\n      libName,\n      moduleName\n    }\n  } = match;\n  const modules = data.libraries.find(({\n    lib_name\n  }) => lib_name === libName).lib_modules.find(({\n    module\n  }) => module === moduleName);\n  const classes = useStyles();\n\n  if (\"module_classes\" in modules && modules.module_classes !== undefined) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 9,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      pt: 2,\n      pb: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      component: \"h1\",\n      variant: \"h1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 15\n      }\n    }, \"module: \", modules.module)), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      elevation: 0,\n      variant: \"outlined\",\n      className: classes.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }\n    }, \"import\"), \" \", importPath(libName, modules))), /*#__PURE__*/React.createElement(Box, {\n      pt: 2,\n      pb: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      pt: 1,\n      pb: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      component: \"h2\",\n      variant: \"h2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }\n    }, \"Classes\")), [].concat(modules.module_classes).sort((a, b) => a.class_name.localeCompare(b.class_name)).map(index => {\n      return /*#__PURE__*/React.createElement(Box, {\n        pt: 1,\n        pb: 1,\n        key: index.class_name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: `/${libName}/${moduleName}/${index.class_name}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        component: \"h3\",\n        variant: \"h4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 25\n        }\n      }, index.class_name, \" \")), /*#__PURE__*/React.createElement(Toitdocs, {\n        value: index.class_toitdoc,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 23\n        }\n      }));\n    })), /*#__PURE__*/React.createElement(TopLevel, {\n      value: modules.top_level,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(TopLevelExport, {\n      value: modules.top_level,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Hidden, {\n      xsDown: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ModuleContentList, {\n      value: modules,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n  if (\"export_classes\" in modules && modules.export_classes !== undefined) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 9,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      pt: 2,\n      pb: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      component: \"h1\",\n      variant: \"h1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 15\n      }\n    }, \"module: \", modules.module)), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      elevation: 0,\n      variant: \"outlined\",\n      className: classes.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }\n    }, \"import\"), \" \", importPath(libName, modules))), /*#__PURE__*/React.createElement(Box, {\n      pt: 2,\n      pb: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      pt: 1,\n      pb: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      component: \"h2\",\n      variant: \"h2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }\n    }, \"Exported classes\")), [].concat(modules.export_classes).sort((a, b) => a.class_name.localeCompare(b.class_name)).map(index => {\n      return /*#__PURE__*/React.createElement(Box, {\n        pt: 1,\n        pb: 1,\n        key: index.class_name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: `/${index.exported_from}/${index.class_name}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        component: \"h3\",\n        variant: \"h3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 25\n        }\n      }, index.class_name, \" \")), /*#__PURE__*/React.createElement(Toitdocs, {\n        value: index.class_toitdoc,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 23\n        }\n      }));\n    })), /*#__PURE__*/React.createElement(TopLevel, {\n      value: modules.top_level,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(TopLevelExport, {\n      value: modules.top_level,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Hidden, {\n      xsDown: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ModuleContentList, {\n      value: modules,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n  if (\"top_level\" in modules && modules.top_level !== undefined) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 9,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      pt: 2,\n      pb: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      component: \"h1\",\n      variant: \"h1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 15\n      }\n    }, \"module: \", modules.module)), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      elevation: 0,\n      variant: \"outlined\",\n      className: classes.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 17\n      }\n    }, \"import\"), \" \", importPath(libName, modules))), /*#__PURE__*/React.createElement(TopLevel, {\n      value: modules.top_level,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(TopLevelExport, {\n      value: modules.top_level,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Hidden, {\n      xsDown: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ModuleContentList, {\n      value: modules,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 15\n      }\n    })))));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 7\n      }\n    }, \"Module: \", /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 17\n      }\n    }, modules.module));\n  }\n};\n\nexport default ModuleInfo;","map":{"version":3,"sources":["/Users/krzysztofmroz/toit_folder/web-toitdocs/src/components/module_info.js"],"names":["React","makeStyles","Link","data","Grid","ModuleContentList","Toitdocs","MethodsInModules","Typography","Box","Paper","Hidden","Globals","props","value","undefined","concat","sort","a","b","global_name","localeCompare","map","globals","index","GlobalFunctions","TopLevel","module_globals","TopLevelExport","export_globals","export_functions","importPath","libName","modules","path","module","substring","indexOf","useStyles","theme","root","flexGrow","paper","padding","spacing","width","backgroundColor","color","ModuleInfo","match","params","moduleName","libraries","find","lib_name","lib_modules","classes","module_classes","class_name","class_toitdoc","top_level","export_classes","exported_from"],"mappings":"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","sourcesContent":["// Copyright (C) 2020 Toitware ApS. All rights reserved.\n\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link } from \"react-router-dom\";\nimport data from \"../libraries.json\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ModuleContentList from \"./module_content_list\";\nimport Toitdocs from \"./toitdoc_info\";\nimport { MethodsInModules } from \"./methods\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { Hidden } from \"@material-ui/core\";\n\nfunction Globals(props) {\n  if (props.value !== undefined) {\n    return (\n      <div>\n        <Typography component=\"h3\" variant=\"h3\">\n          Variables:\n        </Typography>\n        {[]\n          .concat(props.value)\n          .sort((a, b) => a.global_name.localeCompare(b.global_name))\n          .map((globals, index) => {\n            return (\n              <div key={`${globals.global_name}_${index}`}>\n                <code className=\"functionName\">{globals.global_name}</code>\n              </div>\n            );\n          })}\n      </div>\n    );\n  } else {\n    return null;\n  }\n}\n\nfunction GlobalFunctions(props) {\n  if (props.value !== undefined) {\n    return (\n      <div>\n        <Typography component=\"h3\" variant=\"h3\">\n          Functions:\n        </Typography>\n        <MethodsInModules value={props.value} />\n      </div>\n    );\n  } else {\n    return null;\n  }\n}\n\nfunction TopLevel(props) {\n  if (props.value !== undefined) {\n    return (\n      <div>\n        <Typography component=\"h2\" variant=\"h2\"></Typography>\n        <Globals value={props.value.module_globals} />\n        <GlobalFunctions value={props.value} />\n      </div>\n    );\n  } else {\n    return null;\n  }\n}\n\nfunction TopLevelExport(props) {\n  try {\n    if (\n      props.value.export_globals !== undefined ||\n      props.value.export_functions !== undefined\n    ) {\n      return (\n        <div>\n          <Typography component=\"h2\" variant=\"h2\">\n            Exports\n          </Typography>\n          <Globals value={props.value.export_globals} />\n          <GlobalFunctions value={props.value.export_functions} />\n        </div>\n      );\n    } else {\n      return null;\n    }\n  } catch {\n    return null;\n  }\n}\n\nfunction importPath(libName, modules) {\n  var path = \"\";\n  if (libName === modules.module.substring(0, modules.module.indexOf(\".\"))) {\n    path = modules.module.substring(0, modules.module.indexOf(\".\"));\n  } else {\n    path =\n      libName + \".\" + modules.module.substring(0, modules.module.indexOf(\".\"));\n  }\n  return path;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(1),\n    width: \"60%\",\n    backgroundColor: \"#9d9d9c11\",\n    color: \"black\",\n  },\n}));\n\nconst ModuleInfo = ({ match }) => {\n  const {\n    params: { libName, moduleName },\n  } = match;\n\n  const modules = data.libraries\n    .find(({ lib_name }) => lib_name === libName)\n    .lib_modules.find(({ module }) => module === moduleName);\n\n  const classes = useStyles();\n  if (\"module_classes\" in modules && modules.module_classes !== undefined) {\n    return (\n      <div>\n        <Grid container  className={classes.root}>\n          <Grid item xs={9}>\n            <Box pt={2} pb={2}>\n              <Typography component=\"h1\" variant=\"h1\">\n                module: {modules.module}\n              </Typography>\n            </Box>\n            <Grid item>\n              <Paper elevation={0} variant=\"outlined\" className={classes.paper}>\n                <strong>import</strong> {importPath(libName, modules)}\n              </Paper>\n            </Grid>\n            <Box pt={2} pb={2}>\n              <Box pt={1} pb={1}>\n                <Typography component=\"h2\" variant=\"h2\">\n                  Classes\n                </Typography>\n              </Box>\n              {[]\n                .concat(modules.module_classes)\n                .sort((a, b) => a.class_name.localeCompare(b.class_name))\n                .map((index) => {\n                  return (\n                    <Box pt={1} pb={1} key={index.class_name}>\n                      <Link\n                        to={`/${libName}/${moduleName}/${index.class_name}`}\n                      >\n                        <Typography component=\"h3\" variant=\"h4\">\n                          {index.class_name}{\" \"}\n                        </Typography>\n                      </Link>\n                      <Toitdocs value={index.class_toitdoc} />\n                    </Box>\n                  );\n                })}\n            </Box>\n            <TopLevel value={modules.top_level} />\n            <TopLevelExport value={modules.top_level} />\n          </Grid>\n          <Hidden xsDown>\n            <Grid item xs={3}>\n              <ModuleContentList value={modules} />\n            </Grid>\n          </Hidden>\n        </Grid>\n      </div>\n    );\n  }\n  if (\"export_classes\" in modules && modules.export_classes !== undefined) {\n    return (\n      <div>\n        <Grid container>\n          <Grid item xs={9}>\n            <Box pt={2} pb={2}>\n              <Typography component=\"h1\" variant=\"h1\">\n                module: {modules.module}\n              </Typography>\n            </Box>\n            <Grid item>\n              <Paper elevation={0} variant=\"outlined\" className={classes.paper}>\n                <strong>import</strong> {importPath(libName, modules)}\n              </Paper>\n            </Grid>\n            <Box pt={2} pb={2}>\n              <Box pt={1} pb={1}>\n                <Typography component=\"h2\" variant=\"h2\">\n                  Exported classes\n                </Typography>\n              </Box>\n              {[]\n                .concat(modules.export_classes)\n                .sort((a, b) => a.class_name.localeCompare(b.class_name))\n                .map((index) => {\n                  return (\n                    <Box pt={1} pb={1} key={index.class_name}>\n                      <Link to={`/${index.exported_from}/${index.class_name}`}>\n                        <Typography component=\"h3\" variant=\"h3\">\n                          {index.class_name}{\" \"}\n                        </Typography>\n                      </Link>\n                      <Toitdocs value={index.class_toitdoc} />\n                    </Box>\n                  );\n                })}\n            </Box>\n            <TopLevel value={modules.top_level} />\n            <TopLevelExport value={modules.top_level} />\n          </Grid>\n          <Hidden xsDown>\n            <Grid item xs={3}>\n              <ModuleContentList value={modules} />\n            </Grid>\n          </Hidden>\n        </Grid>\n      </div>\n    );\n  }\n  if (\"top_level\" in modules && modules.top_level !== undefined) {\n    return (\n      <div>\n        <Grid container >\n          <Grid item xs={9}>\n            <Box pt={2} pb={2}>\n              <Typography component=\"h1\" variant=\"h1\">\n                module: {modules.module}\n              </Typography>\n            </Box>\n            <Grid item>\n              <Paper elevation={0} variant=\"outlined\" className={classes.paper}>\n                <strong>import</strong> {importPath(libName, modules)}\n              </Paper>\n            </Grid>\n            <TopLevel value={modules.top_level} />\n            <TopLevelExport value={modules.top_level} />\n          </Grid>\n          <Hidden xsDown>\n            <Grid item xs={3}>\n              <ModuleContentList value={modules} />\n            </Grid>\n          </Hidden>\n        </Grid>\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        Module: <strong>{modules.module}</strong>\n      </div>\n    );\n  }\n};\n\nexport default ModuleInfo;\n"]},"metadata":{},"sourceType":"module"}