{"ast":null,"code":"var _jsxFileName = \"/Users/krzysztofmroz/toit_folder/web-toitdocs/src/components/parameters.js\";\nimport { Link } from \"react-router-dom\";\nimport React from \"react\";\n\nfunction Parameters(props) {\n  if (props.value !== undefined) {\n    let styling = [];\n    styling[0] = \"<b>\";\n    styling[1] = \"</b>\";\n    return props.value.map((parameter, i) => {\n      let param;\n\n      if (parameter.is_required) {\n        param = `${parameter.param_name}`;\n      } else {\n        param = `${parameter.param_name}=`;\n      }\n\n      if (parameter.is_named) {\n        param = `--${param}`;\n        styling[0] = \"<b>\";\n        styling[1] = \"</b>\";\n      }\n\n      if (parameter.is_block) {\n        param = `[${param}] `;\n        return param;\n      }\n\n      if (parameter.param_type !== \"none\" && parameter.param_type !== \"any\") {\n        return /*#__PURE__*/React.createElement(\"span\", {\n          key: i,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: parameter.is_named === true ? {\n            color: \"blue\"\n          } : {},\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: parameter.is_block === true ? {\n            backgroundColor: \"#d2d2d2\"\n          } : {},\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }\n        }, param, \"/\", /*#__PURE__*/React.createElement(Link, {\n          to: `/${parameter.path}/${parameter.param_type}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }\n        }, parameter.param_type), \" \")));\n      } else {\n        return /*#__PURE__*/React.createElement(\"span\", {\n          key: i,\n          style: {\n            color: \"#303030\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 11\n          }\n        }, param, \"/\", parameter.param_type, \" \");\n      }\n    });\n  } else {\n    return null;\n  }\n}\n\nexport { Parameters };","map":{"version":3,"sources":["/Users/krzysztofmroz/toit_folder/web-toitdocs/src/components/parameters.js"],"names":["Link","React","Parameters","props","value","undefined","styling","map","parameter","i","param","is_required","param_name","is_named","is_block","param_type","color","backgroundColor","path"],"mappings":";AAAA,SAASA,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACzB,MAAIA,KAAK,CAACC,KAAN,KAAgBC,SAApB,EAA+B;AAC7B,QAAIC,OAAO,GAAG,EAAd;AACAA,IAAAA,OAAO,CAAC,CAAD,CAAP,GAAa,KAAb;AACAA,IAAAA,OAAO,CAAC,CAAD,CAAP,GAAa,MAAb;AACA,WAAOH,KAAK,CAACC,KAAN,CAAYG,GAAZ,CAAgB,CAACC,SAAD,EAAYC,CAAZ,KAAkB;AACvC,UAAIC,KAAJ;;AACA,UAAIF,SAAS,CAACG,WAAd,EAA2B;AACzBD,QAAAA,KAAK,GAAI,GAAEF,SAAS,CAACI,UAAW,EAAhC;AACD,OAFD,MAEO;AACLF,QAAAA,KAAK,GAAI,GAAEF,SAAS,CAACI,UAAW,GAAhC;AACD;;AACD,UAAIJ,SAAS,CAACK,QAAd,EAAwB;AACtBH,QAAAA,KAAK,GAAI,KAAIA,KAAM,EAAnB;AACAJ,QAAAA,OAAO,CAAC,CAAD,CAAP,GAAa,KAAb;AACAA,QAAAA,OAAO,CAAC,CAAD,CAAP,GAAa,MAAb;AACD;;AACD,UAAIE,SAAS,CAACM,QAAd,EAAwB;AACtBJ,QAAAA,KAAK,GAAI,IAAGA,KAAM,IAAlB;AACA,eAAOA,KAAP;AACD;;AAED,UAAIF,SAAS,CAACO,UAAV,KAAyB,MAAzB,IAAmCP,SAAS,CAACO,UAAV,KAAyB,KAAhE,EAAuE;AACrE,4BACE;AAAM,UAAA,GAAG,EAAEN,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAM,UAAA,KAAK,EAAED,SAAS,CAACK,QAAV,KAAuB,IAAvB,GAA8B;AAAEG,YAAAA,KAAK,EAAE;AAAT,WAA9B,GAAkD,EAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AACE,UAAA,KAAK,EACHR,SAAS,CAACM,QAAV,KAAuB,IAAvB,GACI;AAAEG,YAAAA,eAAe,EAAE;AAAnB,WADJ,GAEI,EAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAOGP,KAPH,EAQG,GARH,eASE,oBAAC,IAAD;AAAM,UAAA,EAAE,EAAG,IAAGF,SAAS,CAACU,IAAK,IAAGV,SAAS,CAACO,UAAW,EAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGP,SAAS,CAACO,UADb,CATF,EAWU,GAXV,CADF,CADF,CADF;AAmBD,OApBD,MAoBO;AACL,4BACE;AAAM,UAAA,GAAG,EAAEN,CAAX;AAAc,UAAA,KAAK,EAAE;AAAEO,YAAAA,KAAK,EAAE;AAAT,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGN,KADH,EAEG,GAFH,EAGGF,SAAS,CAACO,UAHb,EAGyB,GAHzB,CADF;AAOD;AACF,KA9CM,CAAP;AA+CD,GAnDD,MAmDO;AACL,WAAO,IAAP;AACD;AACF;;AAED,SAASb,UAAT","sourcesContent":["import { Link } from \"react-router-dom\";\nimport React from \"react\";\n\nfunction Parameters(props) {\n  if (props.value !== undefined) {\n    let styling = [];\n    styling[0] = \"<b>\";\n    styling[1] = \"</b>\";\n    return props.value.map((parameter, i) => {\n      let param;\n      if (parameter.is_required) {\n        param = `${parameter.param_name}`;\n      } else {\n        param = `${parameter.param_name}=`;\n      }\n      if (parameter.is_named) {\n        param = `--${param}`;\n        styling[0] = \"<b>\";\n        styling[1] = \"</b>\";\n      }\n      if (parameter.is_block) {\n        param = `[${param}] `;\n        return param;\n      }\n\n      if (parameter.param_type !== \"none\" && parameter.param_type !== \"any\") {\n        return (\n          <span key={i}>\n            <span style={parameter.is_named === true ? { color: \"blue\" } : {}}>\n              <span\n                style={\n                  parameter.is_block === true\n                    ? { backgroundColor: \"#d2d2d2\" }\n                    : {}\n                }\n              >\n                {param}\n                {\"/\"}\n                <Link to={`/${parameter.path}/${parameter.param_type}`}>\n                  {parameter.param_type}\n                </Link>{\" \"}\n              </span>\n            </span>\n          </span>\n        );\n      } else {\n        return (\n          <span key={i} style={{ color: \"#303030\" }}>\n            {param}\n            {\"/\"}\n            {parameter.param_type}{\" \"}\n          </span>\n        );\n      }\n    });\n  } else {\n    return null;\n  }\n}\n\nexport { Parameters };\n"]},"metadata":{},"sourceType":"module"}