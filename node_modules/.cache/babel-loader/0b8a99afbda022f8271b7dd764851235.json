{"ast":null,"code":"var _jsxFileName = \"/Users/krzysztofmroz/toit_folder/web-toitdocs/src/components/methods.js\";\n// Copyright (C) 2020 Toitware ApS. All rights reserved.\nimport React from \"react\";\nimport Toitdocs from \"./toitdoc_info\";\nimport { ArrowRightAlt } from \"@material-ui/icons\";\nimport Box from \"@material-ui/core/Box\";\nimport { Link } from \"react-router-dom\";\nimport { Parameters } from \"./parameters\";\n\nfunction ReturnType({\n  returnType,\n  returnPath\n}) {\n  if (returnType !== \"none\" && returnType !== \"any\") {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `/${returnPath}/${returnType}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }\n    }, returnType));\n  } else {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 12\n      }\n    }, returnType);\n  }\n}\n\nfunction Methods(props) {\n  if (props.value !== undefined) {\n    let iterator = 0;\n    return [].concat(props.value).sort((a, b) => a.function_name.localeCompare(b.function_name)).map((functions, index) => {\n      iterator++;\n      var background;\n\n      if (iterator % 2) {\n        background = \"#eeeeee\";\n      } else {\n        background = \"#fafafa\";\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: `${functions.function_name}_${index}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Box, {\n        p: 1,\n        bgcolor: background,\n        borderRadius: 8,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"functionName\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: `/${props.libName}/${props.moduleName}/${props.className}/${props.functionType}/${functions.function_name}/${index}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 19\n        }\n      }, `${functions.function_name} `))), /*#__PURE__*/React.createElement(Parameters, {\n        value: functions.parameters,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(ArrowRightAlt, {\n        style: {\n          verticalAlign: \"middle\",\n          display: \"inline-flex\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(ReturnType, {\n        returnType: functions.return_type,\n        returnPath: functions.return_path,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Toitdocs, {\n        value: functions.function_toitdoc,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }\n      })));\n    });\n  } else {\n    return null;\n  }\n}\n\nfunction MethodsInModules(props) {\n  if (props.value.module_functions !== undefined) {\n    let iterator = 0;\n    return [].concat(props.value.module_functions).sort((a, b) => a.function_name.localeCompare(b.function_name)).map((functions, index) => {\n      iterator++;\n      var background;\n\n      if (iterator % 2) {\n        background = \"#eeeeee\";\n      } else {\n        background = \"#fafafa\";\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: `${functions.function_name}_${index}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Box, {\n        p: 1,\n        bgcolor: background,\n        borderRadius: 8,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"functionName\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"code\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }\n      }, `${functions.function_name} `)), /*#__PURE__*/React.createElement(Parameters, {\n        value: functions.parameters,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(ArrowRightAlt, {\n        style: {\n          verticalAlign: \"middle\",\n          display: \"inline-flex\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(ReturnType, {\n        returnType: functions.return_type,\n        returnPath: functions.return_path,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Toitdocs, {\n        value: functions.function_toitdoc,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }\n      })));\n    });\n  } else {\n    return null;\n  }\n}\n\nexport { Methods, MethodsInModules };","map":{"version":3,"sources":["/Users/krzysztofmroz/toit_folder/web-toitdocs/src/components/methods.js"],"names":["React","Toitdocs","ArrowRightAlt","Box","Link","Parameters","ReturnType","returnType","returnPath","Methods","props","value","undefined","iterator","concat","sort","a","b","function_name","localeCompare","map","functions","index","background","libName","moduleName","className","functionType","parameters","verticalAlign","display","return_type","return_path","function_toitdoc","MethodsInModules","module_functions"],"mappings":"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","sourcesContent":["// Copyright (C) 2020 Toitware ApS. All rights reserved.\n\nimport React from \"react\";\nimport Toitdocs from \"./toitdoc_info\";\nimport { ArrowRightAlt } from \"@material-ui/icons\";\nimport Box from \"@material-ui/core/Box\";\nimport { Link } from \"react-router-dom\";\nimport { Parameters } from \"./parameters\";\n\nfunction ReturnType({ returnType, returnPath }) {\n  if (returnType !== \"none\" && returnType !== \"any\") {\n    return (\n      <span>\n        <Link to={`/${returnPath}/${returnType}`}>{returnType}</Link>\n      </span>\n    );\n  } else {\n    return <span>{returnType}</span>;\n  }\n}\n\nfunction Methods(props) {\n  if (props.value !== undefined) {\n    let iterator = 0;\n    return []\n      .concat(props.value)\n      .sort((a, b) => a.function_name.localeCompare(b.function_name))\n      .map((functions, index) => {\n        iterator++;\n        var background;\n        if (iterator % 2) {\n          background = \"#eeeeee\";\n        } else {\n          background = \"#fafafa\";\n        }\n        return (\n          <div key={`${functions.function_name}_${index}`}>\n            <Box p={1} bgcolor={background} borderRadius={8}>\n              <span className=\"functionName\">\n                <Link\n                  to={`/${props.libName}/${props.moduleName}/${props.className}/${props.functionType}/${functions.function_name}/${index}`}\n                >\n                  <strong>{`${functions.function_name} `}</strong>\n                </Link>\n              </span>\n              <Parameters value={functions.parameters} />\n              <ArrowRightAlt\n                style={{\n                  verticalAlign: \"middle\",\n                  display: \"inline-flex\",\n                }}\n              />\n              <span>\n                <ReturnType\n                  returnType={functions.return_type}\n                  returnPath={functions.return_path}\n                />\n              </span>\n              <Toitdocs value={functions.function_toitdoc} />\n            </Box>\n          </div>\n        );\n      });\n  } else {\n    return null;\n  }\n}\n\nfunction MethodsInModules(props) {\n  if (props.value.module_functions !== undefined) {\n    let iterator = 0;\n    return []\n      .concat(props.value.module_functions)\n      .sort((a, b) => a.function_name.localeCompare(b.function_name))\n      .map((functions, index) => {\n        iterator++;\n        var background;\n        if (iterator % 2) {\n          background = \"#eeeeee\";\n        } else {\n          background = \"#fafafa\";\n        }\n        return (\n          <div key={`${functions.function_name}_${index}`}>\n            <Box p={1} bgcolor={background} borderRadius={8}>\n              <span className=\"functionName\">\n                <code>{`${functions.function_name} `}</code>\n              </span>\n              <Parameters value={functions.parameters} />\n              <ArrowRightAlt\n                style={{\n                  verticalAlign: \"middle\",\n                  display: \"inline-flex\",\n                }}\n              />\n              <span>\n                <ReturnType\n                  returnType={functions.return_type}\n                  returnPath={functions.return_path}\n                />\n              </span>\n              <Toitdocs value={functions.function_toitdoc} />\n            </Box>\n          </div>\n        );\n      });\n  } else {\n    return null;\n  }\n}\nexport { Methods, MethodsInModules };\n"]},"metadata":{},"sourceType":"module"}