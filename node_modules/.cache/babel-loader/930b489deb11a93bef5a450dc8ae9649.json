{"ast":null,"code":"var _jsxFileName = \"/Users/krzysztofmroz/toit_folder/web-toitdocs/src/components/function_info.js\";\n// Copyright (C) 2020 Toitware ApS. All rights reserved.\nimport React from \"react\";\nimport data from \"../libraries.json\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link } from \"react-router-dom\";\nimport Box from \"@material-ui/core/Box\";\nimport { ArrowRightAlt } from \"@material-ui/icons\";\nimport Toitdocs from \"./toitdoc_info\";\nimport { Parameters } from \"./parameters\";\n\nfunction ReturnType({\n  returnType,\n  returnPath\n}) {\n  if (returnType !== \"none\" && returnType !== \"any\") {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `/${returnPath}/${returnType}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }\n    }, returnType));\n  } else {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 12\n      }\n    }, returnType);\n  }\n}\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\"\n  }\n});\n\nconst FunctionInfo = ({\n  match\n}) => {\n  const classes = useStyles();\n  const {\n    params: {\n      libName,\n      moduleName,\n      className,\n      functionType,\n      functionName,\n      index\n    }\n  } = match;\n  console.log(libName, moduleName, className, functionType, functionName, index);\n  var function_info;\n  var page_title = \"Unknown\";\n\n  if (functionType === \"Constructors\") {\n    function_info = data.libraries.find(({\n      lib_name\n    }) => lib_name === libName).lib_modules.find(({\n      module\n    }) => module === moduleName).module_classes.find(({\n      class_name\n    }) => class_name === className).class_structure.constructors[index]; // .find(({ function_name }) => function_name === functionName\n    // );\n\n    page_title = \"Constructor of class: \" + className;\n  } else if (functionType === \"Factories\") {\n    function_info = data.libraries.find(({\n      lib_name\n    }) => lib_name === libName).lib_modules.find(({\n      module\n    }) => module === moduleName).module_classes.find(({\n      class_name\n    }) => class_name === className).class_structure.factories[index]; // .find(\n    //   ({ function_name }) => function_name === functionName\n    // );\n\n    page_title = \"Factory of class: \" + className;\n  } else if (functionType === \"Members\" || functionType === \"Methods\") {\n    function_info = data.libraries.find(({\n      lib_name\n    }) => lib_name === libName).lib_modules.find(({\n      module\n    }) => module === moduleName).module_classes.find(({\n      class_name\n    }) => class_name === className).class_structure.members.methods[index]; // .find(\n    //   ({ function_name }) => function_name === functionName\n    // );\n\n    page_title = \"Function name: \" + functionName;\n  } else if (functionType === \"Statics\") {\n    function_info = data.libraries.find(({\n      lib_name\n    }) => lib_name === libName).lib_modules.find(({\n      module\n    }) => module === moduleName).module_classes.find(({\n      class_name\n    }) => class_name === className).class_structure.statics[index]; // .find(\n    //   ({ function_name }) => function_name === functionName\n    // );\n\n    page_title = \"Function name: \" + functionName;\n  } else {\n    function_info = \"Unknown type\";\n  }\n\n  console.log(function_info);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    pt: 2,\n    pb: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h1\",\n    component: \"h1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, page_title)), /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Parameters, {\n    value: function_info.parameters,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(ArrowRightAlt, {\n    style: {\n      verticalAlign: \"middle\",\n      display: \"inline-flex\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ReturnType, {\n    returnType: function_info.return_type,\n    returnPath: function_info.return_path,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Toitdocs, {\n    value: function_info.function_toitdoc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default FunctionInfo;","map":{"version":3,"sources":["/Users/krzysztofmroz/toit_folder/web-toitdocs/src/components/function_info.js"],"names":["React","data","Grid","Typography","makeStyles","Link","Box","ArrowRightAlt","Toitdocs","Parameters","ReturnType","returnType","returnPath","useStyles","root","width","FunctionInfo","match","classes","params","libName","moduleName","className","functionType","functionName","index","console","log","function_info","page_title","libraries","find","lib_name","lib_modules","module","module_classes","class_name","class_structure","constructors","factories","members","methods","statics","parameters","verticalAlign","display","return_type","return_path","function_toitdoc"],"mappings":"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","sourcesContent":["// Copyright (C) 2020 Toitware ApS. All rights reserved.\n\nimport React from \"react\";\nimport data from \"../libraries.json\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link } from \"react-router-dom\";\nimport Box from \"@material-ui/core/Box\";\nimport { ArrowRightAlt } from \"@material-ui/icons\";\nimport Toitdocs from \"./toitdoc_info\";\nimport { Parameters } from \"./parameters\";\n\n\nfunction ReturnType({ returnType, returnPath }) {\n  if (returnType !== \"none\" && returnType !== \"any\") {\n    return (\n      <span>\n        <Link to={`/${returnPath}/${returnType}`}>{returnType}</Link>\n      </span>\n    );\n  } else {\n    return <span>{returnType}</span>;\n  }\n}\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\",\n  },\n});\n\nconst FunctionInfo = ({ match }) => {\n  const classes = useStyles();\n  const {\n    params: { libName, moduleName, className, functionType, functionName, index },\n  } = match;\n  \n  console.log(libName, moduleName, className, functionType, functionName, index)\n  var function_info;\n  var page_title = \"Unknown\";\n\n  \n\n  if (functionType === \"Constructors\") {\n    function_info = data.libraries\n      .find(({ lib_name }) => lib_name === libName)\n      .lib_modules.find(({ module }) => module === moduleName)\n      .module_classes.find(({ class_name }) => class_name === className)\n      .class_structure.constructors[index]\n      // .find(({ function_name }) => function_name === functionName\n      // );\n\n    page_title = \"Constructor of class: \" + className;\n  } else if (functionType === \"Factories\") {\n    function_info = data.libraries\n      .find(({ lib_name }) => lib_name === libName)\n      .lib_modules.find(({ module }) => module === moduleName)\n      .module_classes.find(({ class_name }) => class_name === className)\n      .class_structure.factories[index]\n      // .find(\n      //   ({ function_name }) => function_name === functionName\n      // );\n\n    page_title = \"Factory of class: \" + className;\n  } else if (functionType === \"Members\" || functionType === \"Methods\") {\n    function_info = data.libraries\n      .find(({ lib_name }) => lib_name === libName)\n      .lib_modules.find(({ module }) => module === moduleName)\n      .module_classes.find(({ class_name }) => class_name === className)\n      .class_structure.members.methods[index]\n      // .find(\n      //   ({ function_name }) => function_name === functionName\n      // );\n\n    page_title = \"Function name: \" + functionName;\n  } else if (functionType === \"Statics\") {\n    function_info = data.libraries\n      .find(({ lib_name }) => lib_name === libName)\n      .lib_modules.find(({ module }) => module === moduleName)\n      .module_classes.find(({ class_name }) => class_name === className)\n      .class_structure.statics[index]\n      // .find(\n      //   ({ function_name }) => function_name === functionName\n      // );\n\n    page_title = \"Function name: \" + functionName;\n  }  else {\n    function_info = \"Unknown type\";\n  }\n\n  console.log(function_info)\n\n  return (\n    <div className={classes.root}>\n      <Grid container>\n        <Grid item xs={12} sm={9}>\n          <Box pt={2} pb={2}>\n            <Typography variant=\"h1\" component=\"h1\">\n              {page_title}\n            </Typography>\n          </Box>\n          <Box>\n          <code><Parameters value={function_info.parameters} /></code>\n            <ArrowRightAlt\n              style={{\n                verticalAlign: \"middle\",\n                display: \"inline-flex\",\n              }}\n            />\n            <span>\n              <ReturnType\n                returnType={function_info.return_type}\n                returnPath={function_info.return_path}\n              />\n            </span>\n          </Box>\n          <Box>\n            <Toitdocs value={function_info.function_toitdoc} />\n          </Box>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default FunctionInfo;\n"]},"metadata":{},"sourceType":"module"}